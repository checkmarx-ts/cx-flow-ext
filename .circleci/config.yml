version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
      CX_FLOW_URL: https://github.com/checkmarx-ts/cx-flow.git
      CX_FLOW_BRANCH: develop
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: chmod +x mvnw
      - run: ./mvnw test
      - run: ./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout > target/version.txt
      #Clone CxFlow
      - run: git clone -b ${CX_FLOW_BRANCH} ${CX_FLOW_URL}
      #Add new source files (no overwrite)
      - run: cp -vnpr src/main/ cx-flow/src/main
      - run: cd cx-flow && chmod +x gradlew
      - run: ./gradle clean build -x tests
      - run: cp build/libs/*.jar ../target/
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - store_artifacts:
          path: target/*.jar
      - persist_to_workspace:
          root: .
          paths:
            - target/*.jar
            - target/version.txt

  publish-github-release:
    docker:
      - image: circleci/golang:1.9
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=$(cat ./target/version.txt)
            rm ./target/version.txt
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -n ${VERSION} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./target/

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - publish-github-release:
          filters:
            branches:
              only: master
          requires:
            - build